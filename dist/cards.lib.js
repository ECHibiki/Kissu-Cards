!function(t,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define("cards",[],r):"object"==typeof exports?exports.cards=r():t.cards=r()}(self,(function(){return(()=>{"use strict";var t={887:(t,r,n)=>{n.r(r),n.d(r,{glMatrix:()=>a,mat2:()=>e,mat2d:()=>o,mat3:()=>u,mat4:()=>i,quat:()=>f,quat2:()=>h,vec2:()=>l,vec3:()=>c,vec4:()=>s});var a={};n.r(a),n.d(a,{ARRAY_TYPE:()=>v,EPSILON:()=>M,RANDOM:()=>m,equals:()=>x,setMatrixArrayType:()=>d,toRadian:()=>_});var e={};n.r(e),n.d(e,{LDU:()=>O,add:()=>X,adjoint:()=>q,clone:()=>g,copy:()=>E,create:()=>p,determinant:()=>w,equals:()=>N,exactEquals:()=>j,frob:()=>L,fromRotation:()=>B,fromScaling:()=>U,fromValues:()=>T,identity:()=>y,invert:()=>P,mul:()=>G,multiply:()=>F,multiplyScalar:()=>Y,multiplyScalarAndAdd:()=>C,rotate:()=>S,scale:()=>D,set:()=>A,str:()=>I,sub:()=>z,subtract:()=>V,transpose:()=>R});var o={};n.r(o),n.d(o,{add:()=>st,clone:()=>H,copy:()=>Q,create:()=>W,determinant:()=>J,equals:()=>vt,exactEquals:()=>Mt,frob:()=>ct,fromRotation:()=>et,fromScaling:()=>ot,fromTranslation:()=>ut,fromValues:()=>k,identity:()=>Z,invert:()=>K,mul:()=>mt,multiply:()=>tt,multiplyScalar:()=>ht,multiplyScalarAndAdd:()=>lt,rotate:()=>rt,scale:()=>nt,set:()=>$,str:()=>it,sub:()=>dt,subtract:()=>ft,translate:()=>at});var u={};n.r(u),n.d(u,{add:()=>Nt,adjoint:()=>Rt,clone:()=>xt,copy:()=>pt,create:()=>bt,determinant:()=>Pt,equals:()=>Wt,exactEquals:()=>zt,frob:()=>jt,fromMat2d:()=>It,fromMat4:()=>_t,fromQuat:()=>Lt,fromRotation:()=>Bt,fromScaling:()=>Ut,fromTranslation:()=>Dt,fromValues:()=>gt,identity:()=>yt,invert:()=>At,mul:()=>Ht,multiply:()=>qt,multiplyScalar:()=>Ct,multiplyScalarAndAdd:()=>Gt,normalFromMat4:()=>Ot,projection:()=>Xt,rotate:()=>Ft,scale:()=>St,set:()=>Et,str:()=>Vt,sub:()=>Qt,subtract:()=>Yt,translate:()=>wt,transpose:()=>Tt});var i={};n.r(i),n.d(i,{add:()=>Xr,adjoint:()=>ar,clone:()=>kt,copy:()=>$t,create:()=>Zt,determinant:()=>er,equals:()=>Cr,exactEquals:()=>Yr,frob:()=>Or,fromQuat:()=>Ar,fromQuat2:()=>xr,fromRotation:()=>vr,fromRotationTranslation:()=>_r,fromRotationTranslationScale:()=>yr,fromRotationTranslationScaleOrigin:()=>Tr,fromScaling:()=>Mr,fromTranslation:()=>lr,fromValues:()=>Kt,fromXRotation:()=>mr,fromYRotation:()=>dr,fromZRotation:()=>br,frustum:()=>Rr,getRotation:()=>Er,getScaling:()=>gr,getTranslation:()=>pr,identity:()=>tr,invert:()=>nr,lookAt:()=>Ur,mul:()=>Gr,multiply:()=>or,multiplyScalar:()=>jr,multiplyScalarAndAdd:()=>Nr,ortho:()=>Dr,orthoNO:()=>Sr,orthoZO:()=>Br,perspective:()=>qr,perspectiveFromFieldOfView:()=>Fr,perspectiveNO:()=>Pr,perspectiveZO:()=>wr,rotate:()=>cr,rotateX:()=>sr,rotateY:()=>fr,rotateZ:()=>hr,scale:()=>ir,set:()=>Jt,str:()=>Lr,sub:()=>zr,subtract:()=>Vr,targetTo:()=>Ir,translate:()=>ur,transpose:()=>rr});var c={};n.r(c),n.d(c,{add:()=>Kr,angle:()=>qn,bezier:()=>pn,ceil:()=>nn,clone:()=>Hr,copy:()=>kr,create:()=>Wr,cross:()=>bn,dist:()=>On,distance:()=>fn,div:()=>Ln,divide:()=>rn,dot:()=>dn,equals:()=>Dn,exactEquals:()=>Sn,floor:()=>an,forEach:()=>Nn,fromValues:()=>Zr,hermite:()=>xn,inverse:()=>vn,len:()=>Vn,length:()=>Qr,lerp:()=>_n,max:()=>on,min:()=>en,mul:()=>In,multiply:()=>tn,negate:()=>Mn,normalize:()=>mn,random:()=>gn,rotateX:()=>An,rotateY:()=>Rn,rotateZ:()=>Pn,round:()=>un,scale:()=>cn,scaleAndAdd:()=>sn,set:()=>$r,sqrDist:()=>Xn,sqrLen:()=>jn,squaredDistance:()=>hn,squaredLength:()=>ln,str:()=>Fn,sub:()=>Un,subtract:()=>Jr,transformMat3:()=>yn,transformMat4:()=>En,transformQuat:()=>Tn,zero:()=>wn});var s={};n.r(s),n.d(s,{add:()=>Hn,ceil:()=>$n,clone:()=>Cn,copy:()=>zn,create:()=>Yn,cross:()=>la,dist:()=>Ta,distance:()=>ea,div:()=>ya,divide:()=>kn,dot:()=>ha,equals:()=>pa,exactEquals:()=>xa,floor:()=>Kn,forEach:()=>qa,fromValues:()=>Gn,inverse:()=>sa,len:()=>Ra,length:()=>ua,lerp:()=>Ma,max:()=>ta,min:()=>Jn,mul:()=>Ea,multiply:()=>Zn,negate:()=>ca,normalize:()=>fa,random:()=>va,round:()=>ra,scale:()=>na,scaleAndAdd:()=>aa,set:()=>Wn,sqrDist:()=>Aa,sqrLen:()=>Pa,squaredDistance:()=>oa,squaredLength:()=>ia,str:()=>_a,sub:()=>ga,subtract:()=>Qn,transformMat4:()=>ma,transformQuat:()=>da,zero:()=>ba});var f={};n.r(f),n.d(f,{add:()=>oe,calculateW:()=>Xa,clone:()=>re,conjugate:()=>za,copy:()=>ae,create:()=>wa,dot:()=>ce,equals:()=>de,exactEquals:()=>me,exp:()=>Va,fromEuler:()=>Ha,fromMat3:()=>Wa,fromValues:()=>ne,getAngle:()=>Ba,getAxisAngle:()=>Da,identity:()=>Fa,invert:()=>Ga,len:()=>he,length:()=>fe,lerp:()=>se,ln:()=>ja,mul:()=>ue,multiply:()=>Ua,normalize:()=>ve,pow:()=>Na,random:()=>Ca,rotateX:()=>Ia,rotateY:()=>La,rotateZ:()=>Oa,rotationTo:()=>be,scale:()=>ie,set:()=>ee,setAxes:()=>xe,setAxisAngle:()=>Sa,slerp:()=>Ya,sqlerp:()=>_e,sqrLen:()=>Me,squaredLength:()=>le,str:()=>Qa});var h={};n.r(h),n.d(h,{add:()=>Ce,clone:()=>ge,conjugate:()=>ke,copy:()=>qe,create:()=>pe,dot:()=>He,equals:()=>eo,exactEquals:()=>ao,fromMat4:()=>Pe,fromRotation:()=>Re,fromRotationTranslation:()=>Te,fromRotationTranslationValues:()=>ye,fromTranslation:()=>Ae,fromValues:()=>Ee,getDual:()=>De,getReal:()=>Se,getTranslation:()=>Ie,identity:()=>we,invert:()=>Ze,len:()=>Ke,length:()=>$e,lerp:()=>Qe,mul:()=>ze,multiply:()=>Ge,normalize:()=>ro,rotateAroundAxis:()=>Ye,rotateByQuatAppend:()=>je,rotateByQuatPrepend:()=>Ne,rotateX:()=>Oe,rotateY:()=>Xe,rotateZ:()=>Ve,scale:()=>We,set:()=>Fe,setDual:()=>Ue,setReal:()=>Be,sqrLen:()=>to,squaredLength:()=>Je,str:()=>no,translate:()=>Le});var l={};n.r(l),n.d(l,{add:()=>fo,angle:()=>Xo,ceil:()=>vo,clone:()=>uo,copy:()=>co,create:()=>oo,cross:()=>Fo,dist:()=>Ho,distance:()=>Eo,div:()=>Wo,divide:()=>Mo,dot:()=>wo,equals:()=>Yo,exactEquals:()=>No,floor:()=>mo,forEach:()=>ko,fromValues:()=>io,inverse:()=>Po,len:()=>Co,length:()=>To,lerp:()=>So,max:()=>_o,min:()=>bo,mul:()=>zo,multiply:()=>lo,negate:()=>Ro,normalize:()=>qo,random:()=>Do,rotate:()=>Oo,round:()=>xo,scale:()=>po,scaleAndAdd:()=>go,set:()=>so,sqrDist:()=>Qo,sqrLen:()=>Zo,squaredDistance:()=>yo,squaredLength:()=>Ao,str:()=>jo,sub:()=>Go,subtract:()=>ho,transformMat2:()=>Bo,transformMat2d:()=>Uo,transformMat3:()=>Io,transformMat4:()=>Lo,zero:()=>Vo});var M=1e-6,v="undefined"!=typeof Float32Array?Float32Array:Array,m=Math.random;function d(t){v=t}var b=Math.PI/180;function _(t){return t*b}function x(t,r){return Math.abs(t-r)<=M*Math.max(1,Math.abs(t),Math.abs(r))}function p(){var t=new v(4);return v!=Float32Array&&(t[1]=0,t[2]=0),t[0]=1,t[3]=1,t}function g(t){var r=new v(4);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r}function E(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t}function y(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t}function T(t,r,n,a){var e=new v(4);return e[0]=t,e[1]=r,e[2]=n,e[3]=a,e}function A(t,r,n,a,e){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t}function R(t,r){if(t===r){var n=r[1];t[1]=r[2],t[2]=n}else t[0]=r[0],t[1]=r[2],t[2]=r[1],t[3]=r[3];return t}function P(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=n*o-e*a;return u?(u=1/u,t[0]=o*u,t[1]=-a*u,t[2]=-e*u,t[3]=n*u,t):null}function q(t,r){var n=r[0];return t[0]=r[3],t[1]=-r[1],t[2]=-r[2],t[3]=n,t}function w(t){return t[0]*t[3]-t[2]*t[1]}function F(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=n[0],c=n[1],s=n[2],f=n[3];return t[0]=a*i+o*c,t[1]=e*i+u*c,t[2]=a*s+o*f,t[3]=e*s+u*f,t}function S(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=Math.sin(n),c=Math.cos(n);return t[0]=a*c+o*i,t[1]=e*c+u*i,t[2]=a*-i+o*c,t[3]=e*-i+u*c,t}function D(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=n[0],c=n[1];return t[0]=a*i,t[1]=e*i,t[2]=o*c,t[3]=u*c,t}function B(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=a,t[1]=n,t[2]=-n,t[3]=a,t}function U(t,r){return t[0]=r[0],t[1]=0,t[2]=0,t[3]=r[1],t}function I(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}function L(t){return Math.hypot(t[0],t[1],t[2],t[3])}function O(t,r,n,a){return t[2]=a[2]/a[0],n[0]=a[0],n[1]=a[1],n[3]=a[3]-t[2]*n[1],[t,r,n]}function X(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t}function V(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t[3]=r[3]-n[3],t}function j(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]}function N(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=r[0],i=r[1],c=r[2],s=r[3];return Math.abs(n-u)<=M*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(a-i)<=M*Math.max(1,Math.abs(a),Math.abs(i))&&Math.abs(e-c)<=M*Math.max(1,Math.abs(e),Math.abs(c))&&Math.abs(o-s)<=M*Math.max(1,Math.abs(o),Math.abs(s))}function Y(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t}function C(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t[3]=r[3]+n[3]*a,t}Math.hypot||(Math.hypot=function(){for(var t=0,r=arguments.length;r--;)t+=arguments[r]*arguments[r];return Math.sqrt(t)});var G=F,z=V;function W(){var t=new v(6);return v!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0),t[0]=1,t[3]=1,t}function H(t){var r=new v(6);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r}function Q(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t}function Z(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t}function k(t,r,n,a,e,o){var u=new v(6);return u[0]=t,u[1]=r,u[2]=n,u[3]=a,u[4]=e,u[5]=o,u}function $(t,r,n,a,e,o,u){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t[4]=o,t[5]=u,t}function K(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=n*o-a*e;return c?(c=1/c,t[0]=o*c,t[1]=-a*c,t[2]=-e*c,t[3]=n*c,t[4]=(e*i-o*u)*c,t[5]=(a*u-n*i)*c,t):null}function J(t){return t[0]*t[3]-t[1]*t[2]}function tt(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=n[0],f=n[1],h=n[2],l=n[3],M=n[4],v=n[5];return t[0]=a*s+o*f,t[1]=e*s+u*f,t[2]=a*h+o*l,t[3]=e*h+u*l,t[4]=a*M+o*v+i,t[5]=e*M+u*v+c,t}function rt(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=Math.sin(n),f=Math.cos(n);return t[0]=a*f+o*s,t[1]=e*f+u*s,t[2]=a*-s+o*f,t[3]=e*-s+u*f,t[4]=i,t[5]=c,t}function nt(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=n[0],f=n[1];return t[0]=a*s,t[1]=e*s,t[2]=o*f,t[3]=u*f,t[4]=i,t[5]=c,t}function at(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=n[0],f=n[1];return t[0]=a,t[1]=e,t[2]=o,t[3]=u,t[4]=a*s+o*f+i,t[5]=e*s+u*f+c,t}function et(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=a,t[1]=n,t[2]=-n,t[3]=a,t[4]=0,t[5]=0,t}function ot(t,r){return t[0]=r[0],t[1]=0,t[2]=0,t[3]=r[1],t[4]=0,t[5]=0,t}function ut(t,r){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=r[0],t[5]=r[1],t}function it(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"}function ct(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],1)}function st(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t[4]=r[4]+n[4],t[5]=r[5]+n[5],t}function ft(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t[3]=r[3]-n[3],t[4]=r[4]-n[4],t[5]=r[5]-n[5],t}function ht(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t[4]=r[4]*n,t[5]=r[5]*n,t}function lt(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t[3]=r[3]+n[3]*a,t[4]=r[4]+n[4]*a,t[5]=r[5]+n[5]*a,t}function Mt(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]&&t[4]===r[4]&&t[5]===r[5]}function vt(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=t[4],i=t[5],c=r[0],s=r[1],f=r[2],h=r[3],l=r[4],v=r[5];return Math.abs(n-c)<=M*Math.max(1,Math.abs(n),Math.abs(c))&&Math.abs(a-s)<=M*Math.max(1,Math.abs(a),Math.abs(s))&&Math.abs(e-f)<=M*Math.max(1,Math.abs(e),Math.abs(f))&&Math.abs(o-h)<=M*Math.max(1,Math.abs(o),Math.abs(h))&&Math.abs(u-l)<=M*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(i-v)<=M*Math.max(1,Math.abs(i),Math.abs(v))}var mt=tt,dt=ft;function bt(){var t=new v(9);return v!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function _t(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[4],t[4]=r[5],t[5]=r[6],t[6]=r[8],t[7]=r[9],t[8]=r[10],t}function xt(t){var r=new v(9);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r}function pt(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t}function gt(t,r,n,a,e,o,u,i,c){var s=new v(9);return s[0]=t,s[1]=r,s[2]=n,s[3]=a,s[4]=e,s[5]=o,s[6]=u,s[7]=i,s[8]=c,s}function Et(t,r,n,a,e,o,u,i,c,s){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t[4]=o,t[5]=u,t[6]=i,t[7]=c,t[8]=s,t}function yt(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function Tt(t,r){if(t===r){var n=r[1],a=r[2],e=r[5];t[1]=r[3],t[2]=r[6],t[3]=n,t[5]=r[7],t[6]=a,t[7]=e}else t[0]=r[0],t[1]=r[3],t[2]=r[6],t[3]=r[1],t[4]=r[4],t[5]=r[7],t[6]=r[2],t[7]=r[5],t[8]=r[8];return t}function At(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],f=r[8],h=f*u-i*s,l=-f*o+i*c,M=s*o-u*c,v=n*h+a*l+e*M;return v?(v=1/v,t[0]=h*v,t[1]=(-f*a+e*s)*v,t[2]=(i*a-e*u)*v,t[3]=l*v,t[4]=(f*n-e*c)*v,t[5]=(-i*n+e*o)*v,t[6]=M*v,t[7]=(-s*n+a*c)*v,t[8]=(u*n-a*o)*v,t):null}function Rt(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],f=r[8];return t[0]=u*f-i*s,t[1]=e*s-a*f,t[2]=a*i-e*u,t[3]=i*c-o*f,t[4]=n*f-e*c,t[5]=e*o-n*i,t[6]=o*s-u*c,t[7]=a*c-n*s,t[8]=n*u-a*o,t}function Pt(t){var r=t[0],n=t[1],a=t[2],e=t[3],o=t[4],u=t[5],i=t[6],c=t[7],s=t[8];return r*(s*o-u*c)+n*(-s*e+u*i)+a*(c*e-o*i)}function qt(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=r[8],l=n[0],M=n[1],v=n[2],m=n[3],d=n[4],b=n[5],_=n[6],x=n[7],p=n[8];return t[0]=l*a+M*u+v*s,t[1]=l*e+M*i+v*f,t[2]=l*o+M*c+v*h,t[3]=m*a+d*u+b*s,t[4]=m*e+d*i+b*f,t[5]=m*o+d*c+b*h,t[6]=_*a+x*u+p*s,t[7]=_*e+x*i+p*f,t[8]=_*o+x*c+p*h,t}function wt(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=r[8],l=n[0],M=n[1];return t[0]=a,t[1]=e,t[2]=o,t[3]=u,t[4]=i,t[5]=c,t[6]=l*a+M*u+s,t[7]=l*e+M*i+f,t[8]=l*o+M*c+h,t}function Ft(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=r[8],l=Math.sin(n),M=Math.cos(n);return t[0]=M*a+l*u,t[1]=M*e+l*i,t[2]=M*o+l*c,t[3]=M*u-l*a,t[4]=M*i-l*e,t[5]=M*c-l*o,t[6]=s,t[7]=f,t[8]=h,t}function St(t,r,n){var a=n[0],e=n[1];return t[0]=a*r[0],t[1]=a*r[1],t[2]=a*r[2],t[3]=e*r[3],t[4]=e*r[4],t[5]=e*r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t}function Dt(t,r){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=r[0],t[7]=r[1],t[8]=1,t}function Bt(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=a,t[1]=n,t[2]=0,t[3]=-n,t[4]=a,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function Ut(t,r){return t[0]=r[0],t[1]=0,t[2]=0,t[3]=0,t[4]=r[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t}function It(t,r){return t[0]=r[0],t[1]=r[1],t[2]=0,t[3]=r[2],t[4]=r[3],t[5]=0,t[6]=r[4],t[7]=r[5],t[8]=1,t}function Lt(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=n+n,i=a+a,c=e+e,s=n*u,f=a*u,h=a*i,l=e*u,M=e*i,v=e*c,m=o*u,d=o*i,b=o*c;return t[0]=1-h-v,t[3]=f-b,t[6]=l+d,t[1]=f+b,t[4]=1-s-v,t[7]=M-m,t[2]=l-d,t[5]=M+m,t[8]=1-s-h,t}function Ot(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],f=r[8],h=r[9],l=r[10],M=r[11],v=r[12],m=r[13],d=r[14],b=r[15],_=n*i-a*u,x=n*c-e*u,p=n*s-o*u,g=a*c-e*i,E=a*s-o*i,y=e*s-o*c,T=f*m-h*v,A=f*d-l*v,R=f*b-M*v,P=h*d-l*m,q=h*b-M*m,w=l*b-M*d,F=_*w-x*q+p*P+g*R-E*A+y*T;return F?(F=1/F,t[0]=(i*w-c*q+s*P)*F,t[1]=(c*R-u*w-s*A)*F,t[2]=(u*q-i*R+s*T)*F,t[3]=(e*q-a*w-o*P)*F,t[4]=(n*w-e*R+o*A)*F,t[5]=(a*R-n*q-o*T)*F,t[6]=(m*y-d*E+b*g)*F,t[7]=(d*p-v*y-b*x)*F,t[8]=(v*E-m*p+b*_)*F,t):null}function Xt(t,r,n){return t[0]=2/r,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/n,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t}function Vt(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"}function jt(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])}function Nt(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t[4]=r[4]+n[4],t[5]=r[5]+n[5],t[6]=r[6]+n[6],t[7]=r[7]+n[7],t[8]=r[8]+n[8],t}function Yt(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t[3]=r[3]-n[3],t[4]=r[4]-n[4],t[5]=r[5]-n[5],t[6]=r[6]-n[6],t[7]=r[7]-n[7],t[8]=r[8]-n[8],t}function Ct(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t[4]=r[4]*n,t[5]=r[5]*n,t[6]=r[6]*n,t[7]=r[7]*n,t[8]=r[8]*n,t}function Gt(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t[3]=r[3]+n[3]*a,t[4]=r[4]+n[4]*a,t[5]=r[5]+n[5]*a,t[6]=r[6]+n[6]*a,t[7]=r[7]+n[7]*a,t[8]=r[8]+n[8]*a,t}function zt(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]&&t[4]===r[4]&&t[5]===r[5]&&t[6]===r[6]&&t[7]===r[7]&&t[8]===r[8]}function Wt(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=t[4],i=t[5],c=t[6],s=t[7],f=t[8],h=r[0],l=r[1],v=r[2],m=r[3],d=r[4],b=r[5],_=r[6],x=r[7],p=r[8];return Math.abs(n-h)<=M*Math.max(1,Math.abs(n),Math.abs(h))&&Math.abs(a-l)<=M*Math.max(1,Math.abs(a),Math.abs(l))&&Math.abs(e-v)<=M*Math.max(1,Math.abs(e),Math.abs(v))&&Math.abs(o-m)<=M*Math.max(1,Math.abs(o),Math.abs(m))&&Math.abs(u-d)<=M*Math.max(1,Math.abs(u),Math.abs(d))&&Math.abs(i-b)<=M*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(c-_)<=M*Math.max(1,Math.abs(c),Math.abs(_))&&Math.abs(s-x)<=M*Math.max(1,Math.abs(s),Math.abs(x))&&Math.abs(f-p)<=M*Math.max(1,Math.abs(f),Math.abs(p))}var Ht=qt,Qt=Yt;function Zt(){var t=new v(16);return v!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t}function kt(t){var r=new v(16);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r[9]=t[9],r[10]=t[10],r[11]=t[11],r[12]=t[12],r[13]=t[13],r[14]=t[14],r[15]=t[15],r}function $t(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],t}function Kt(t,r,n,a,e,o,u,i,c,s,f,h,l,M,m,d){var b=new v(16);return b[0]=t,b[1]=r,b[2]=n,b[3]=a,b[4]=e,b[5]=o,b[6]=u,b[7]=i,b[8]=c,b[9]=s,b[10]=f,b[11]=h,b[12]=l,b[13]=M,b[14]=m,b[15]=d,b}function Jt(t,r,n,a,e,o,u,i,c,s,f,h,l,M,v,m,d){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t[4]=o,t[5]=u,t[6]=i,t[7]=c,t[8]=s,t[9]=f,t[10]=h,t[11]=l,t[12]=M,t[13]=v,t[14]=m,t[15]=d,t}function tr(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function rr(t,r){if(t===r){var n=r[1],a=r[2],e=r[3],o=r[6],u=r[7],i=r[11];t[1]=r[4],t[2]=r[8],t[3]=r[12],t[4]=n,t[6]=r[9],t[7]=r[13],t[8]=a,t[9]=o,t[11]=r[14],t[12]=e,t[13]=u,t[14]=i}else t[0]=r[0],t[1]=r[4],t[2]=r[8],t[3]=r[12],t[4]=r[1],t[5]=r[5],t[6]=r[9],t[7]=r[13],t[8]=r[2],t[9]=r[6],t[10]=r[10],t[11]=r[14],t[12]=r[3],t[13]=r[7],t[14]=r[11],t[15]=r[15];return t}function nr(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],f=r[8],h=r[9],l=r[10],M=r[11],v=r[12],m=r[13],d=r[14],b=r[15],_=n*i-a*u,x=n*c-e*u,p=n*s-o*u,g=a*c-e*i,E=a*s-o*i,y=e*s-o*c,T=f*m-h*v,A=f*d-l*v,R=f*b-M*v,P=h*d-l*m,q=h*b-M*m,w=l*b-M*d,F=_*w-x*q+p*P+g*R-E*A+y*T;return F?(F=1/F,t[0]=(i*w-c*q+s*P)*F,t[1]=(e*q-a*w-o*P)*F,t[2]=(m*y-d*E+b*g)*F,t[3]=(l*E-h*y-M*g)*F,t[4]=(c*R-u*w-s*A)*F,t[5]=(n*w-e*R+o*A)*F,t[6]=(d*p-v*y-b*x)*F,t[7]=(f*y-l*p+M*x)*F,t[8]=(u*q-i*R+s*T)*F,t[9]=(a*R-n*q-o*T)*F,t[10]=(v*E-m*p+b*_)*F,t[11]=(h*p-f*E-M*_)*F,t[12]=(i*A-u*P-c*T)*F,t[13]=(n*P-a*A+e*T)*F,t[14]=(m*x-v*g-d*_)*F,t[15]=(f*g-h*x+l*_)*F,t):null}function ar(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=r[4],i=r[5],c=r[6],s=r[7],f=r[8],h=r[9],l=r[10],M=r[11],v=r[12],m=r[13],d=r[14],b=r[15];return t[0]=i*(l*b-M*d)-h*(c*b-s*d)+m*(c*M-s*l),t[1]=-(a*(l*b-M*d)-h*(e*b-o*d)+m*(e*M-o*l)),t[2]=a*(c*b-s*d)-i*(e*b-o*d)+m*(e*s-o*c),t[3]=-(a*(c*M-s*l)-i*(e*M-o*l)+h*(e*s-o*c)),t[4]=-(u*(l*b-M*d)-f*(c*b-s*d)+v*(c*M-s*l)),t[5]=n*(l*b-M*d)-f*(e*b-o*d)+v*(e*M-o*l),t[6]=-(n*(c*b-s*d)-u*(e*b-o*d)+v*(e*s-o*c)),t[7]=n*(c*M-s*l)-u*(e*M-o*l)+f*(e*s-o*c),t[8]=u*(h*b-M*m)-f*(i*b-s*m)+v*(i*M-s*h),t[9]=-(n*(h*b-M*m)-f*(a*b-o*m)+v*(a*M-o*h)),t[10]=n*(i*b-s*m)-u*(a*b-o*m)+v*(a*s-o*i),t[11]=-(n*(i*M-s*h)-u*(a*M-o*h)+f*(a*s-o*i)),t[12]=-(u*(h*d-l*m)-f*(i*d-c*m)+v*(i*l-c*h)),t[13]=n*(h*d-l*m)-f*(a*d-e*m)+v*(a*l-e*h),t[14]=-(n*(i*d-c*m)-u*(a*d-e*m)+v*(a*c-e*i)),t[15]=n*(i*l-c*h)-u*(a*l-e*h)+f*(a*c-e*i),t}function er(t){var r=t[0],n=t[1],a=t[2],e=t[3],o=t[4],u=t[5],i=t[6],c=t[7],s=t[8],f=t[9],h=t[10],l=t[11],M=t[12],v=t[13],m=t[14],d=t[15];return(r*u-n*o)*(h*d-l*m)-(r*i-a*o)*(f*d-l*v)+(r*c-e*o)*(f*m-h*v)+(n*i-a*u)*(s*d-l*M)-(n*c-e*u)*(s*m-h*M)+(a*c-e*i)*(s*v-f*M)}function or(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=r[8],l=r[9],M=r[10],v=r[11],m=r[12],d=r[13],b=r[14],_=r[15],x=n[0],p=n[1],g=n[2],E=n[3];return t[0]=x*a+p*i+g*h+E*m,t[1]=x*e+p*c+g*l+E*d,t[2]=x*o+p*s+g*M+E*b,t[3]=x*u+p*f+g*v+E*_,x=n[4],p=n[5],g=n[6],E=n[7],t[4]=x*a+p*i+g*h+E*m,t[5]=x*e+p*c+g*l+E*d,t[6]=x*o+p*s+g*M+E*b,t[7]=x*u+p*f+g*v+E*_,x=n[8],p=n[9],g=n[10],E=n[11],t[8]=x*a+p*i+g*h+E*m,t[9]=x*e+p*c+g*l+E*d,t[10]=x*o+p*s+g*M+E*b,t[11]=x*u+p*f+g*v+E*_,x=n[12],p=n[13],g=n[14],E=n[15],t[12]=x*a+p*i+g*h+E*m,t[13]=x*e+p*c+g*l+E*d,t[14]=x*o+p*s+g*M+E*b,t[15]=x*u+p*f+g*v+E*_,t}function ur(t,r,n){var a,e,o,u,i,c,s,f,h,l,M,v,m=n[0],d=n[1],b=n[2];return r===t?(t[12]=r[0]*m+r[4]*d+r[8]*b+r[12],t[13]=r[1]*m+r[5]*d+r[9]*b+r[13],t[14]=r[2]*m+r[6]*d+r[10]*b+r[14],t[15]=r[3]*m+r[7]*d+r[11]*b+r[15]):(a=r[0],e=r[1],o=r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=r[8],l=r[9],M=r[10],v=r[11],t[0]=a,t[1]=e,t[2]=o,t[3]=u,t[4]=i,t[5]=c,t[6]=s,t[7]=f,t[8]=h,t[9]=l,t[10]=M,t[11]=v,t[12]=a*m+i*d+h*b+r[12],t[13]=e*m+c*d+l*b+r[13],t[14]=o*m+s*d+M*b+r[14],t[15]=u*m+f*d+v*b+r[15]),t}function ir(t,r,n){var a=n[0],e=n[1],o=n[2];return t[0]=r[0]*a,t[1]=r[1]*a,t[2]=r[2]*a,t[3]=r[3]*a,t[4]=r[4]*e,t[5]=r[5]*e,t[6]=r[6]*e,t[7]=r[7]*e,t[8]=r[8]*o,t[9]=r[9]*o,t[10]=r[10]*o,t[11]=r[11]*o,t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],t}function cr(t,r,n,a){var e,o,u,i,c,s,f,h,l,v,m,d,b,_,x,p,g,E,y,T,A,R,P,q,w=a[0],F=a[1],S=a[2],D=Math.hypot(w,F,S);return D<M?null:(w*=D=1/D,F*=D,S*=D,e=Math.sin(n),u=1-(o=Math.cos(n)),i=r[0],c=r[1],s=r[2],f=r[3],h=r[4],l=r[5],v=r[6],m=r[7],d=r[8],b=r[9],_=r[10],x=r[11],p=w*w*u+o,g=F*w*u+S*e,E=S*w*u-F*e,y=w*F*u-S*e,T=F*F*u+o,A=S*F*u+w*e,R=w*S*u+F*e,P=F*S*u-w*e,q=S*S*u+o,t[0]=i*p+h*g+d*E,t[1]=c*p+l*g+b*E,t[2]=s*p+v*g+_*E,t[3]=f*p+m*g+x*E,t[4]=i*y+h*T+d*A,t[5]=c*y+l*T+b*A,t[6]=s*y+v*T+_*A,t[7]=f*y+m*T+x*A,t[8]=i*R+h*P+d*q,t[9]=c*R+l*P+b*q,t[10]=s*R+v*P+_*q,t[11]=f*R+m*P+x*q,r!==t&&(t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t)}function sr(t,r,n){var a=Math.sin(n),e=Math.cos(n),o=r[4],u=r[5],i=r[6],c=r[7],s=r[8],f=r[9],h=r[10],l=r[11];return r!==t&&(t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[4]=o*e+s*a,t[5]=u*e+f*a,t[6]=i*e+h*a,t[7]=c*e+l*a,t[8]=s*e-o*a,t[9]=f*e-u*a,t[10]=h*e-i*a,t[11]=l*e-c*a,t}function fr(t,r,n){var a=Math.sin(n),e=Math.cos(n),o=r[0],u=r[1],i=r[2],c=r[3],s=r[8],f=r[9],h=r[10],l=r[11];return r!==t&&(t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[0]=o*e-s*a,t[1]=u*e-f*a,t[2]=i*e-h*a,t[3]=c*e-l*a,t[8]=o*a+s*e,t[9]=u*a+f*e,t[10]=i*a+h*e,t[11]=c*a+l*e,t}function hr(t,r,n){var a=Math.sin(n),e=Math.cos(n),o=r[0],u=r[1],i=r[2],c=r[3],s=r[4],f=r[5],h=r[6],l=r[7];return r!==t&&(t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t[0]=o*e+s*a,t[1]=u*e+f*a,t[2]=i*e+h*a,t[3]=c*e+l*a,t[4]=s*e-o*a,t[5]=f*e-u*a,t[6]=h*e-i*a,t[7]=l*e-c*a,t}function lr(t,r){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t}function Mr(t,r){return t[0]=r[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=r[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function vr(t,r,n){var a,e,o,u=n[0],i=n[1],c=n[2],s=Math.hypot(u,i,c);return s<M?null:(u*=s=1/s,i*=s,c*=s,a=Math.sin(r),o=1-(e=Math.cos(r)),t[0]=u*u*o+e,t[1]=i*u*o+c*a,t[2]=c*u*o-i*a,t[3]=0,t[4]=u*i*o-c*a,t[5]=i*i*o+e,t[6]=c*i*o+u*a,t[7]=0,t[8]=u*c*o+i*a,t[9]=i*c*o-u*a,t[10]=c*c*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)}function mr(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=n,t[7]=0,t[8]=0,t[9]=-n,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function dr(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=a,t[1]=0,t[2]=-n,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=n,t[9]=0,t[10]=a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function br(t,r){var n=Math.sin(r),a=Math.cos(r);return t[0]=a,t[1]=n,t[2]=0,t[3]=0,t[4]=-n,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function _r(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=a+a,c=e+e,s=o+o,f=a*i,h=a*c,l=a*s,M=e*c,v=e*s,m=o*s,d=u*i,b=u*c,_=u*s;return t[0]=1-(M+m),t[1]=h+_,t[2]=l-b,t[3]=0,t[4]=h-_,t[5]=1-(f+m),t[6]=v+d,t[7]=0,t[8]=l+b,t[9]=v-d,t[10]=1-(f+M),t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}function xr(t,r){var n=new v(3),a=-r[0],e=-r[1],o=-r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=a*a+e*e+o*o+u*u;return h>0?(n[0]=2*(i*u+f*a+c*o-s*e)/h,n[1]=2*(c*u+f*e+s*a-i*o)/h,n[2]=2*(s*u+f*o+i*e-c*a)/h):(n[0]=2*(i*u+f*a+c*o-s*e),n[1]=2*(c*u+f*e+s*a-i*o),n[2]=2*(s*u+f*o+i*e-c*a)),_r(t,r,n),t}function pr(t,r){return t[0]=r[12],t[1]=r[13],t[2]=r[14],t}function gr(t,r){var n=r[0],a=r[1],e=r[2],o=r[4],u=r[5],i=r[6],c=r[8],s=r[9],f=r[10];return t[0]=Math.hypot(n,a,e),t[1]=Math.hypot(o,u,i),t[2]=Math.hypot(c,s,f),t}function Er(t,r){var n=new v(3);gr(n,r);var a=1/n[0],e=1/n[1],o=1/n[2],u=r[0]*a,i=r[1]*e,c=r[2]*o,s=r[4]*a,f=r[5]*e,h=r[6]*o,l=r[8]*a,M=r[9]*e,m=r[10]*o,d=u+f+m,b=0;return d>0?(b=2*Math.sqrt(d+1),t[3]=.25*b,t[0]=(h-M)/b,t[1]=(l-c)/b,t[2]=(i-s)/b):u>f&&u>m?(b=2*Math.sqrt(1+u-f-m),t[3]=(h-M)/b,t[0]=.25*b,t[1]=(i+s)/b,t[2]=(l+c)/b):f>m?(b=2*Math.sqrt(1+f-u-m),t[3]=(l-c)/b,t[0]=(i+s)/b,t[1]=.25*b,t[2]=(h+M)/b):(b=2*Math.sqrt(1+m-u-f),t[3]=(i-s)/b,t[0]=(l+c)/b,t[1]=(h+M)/b,t[2]=.25*b),t}function yr(t,r,n,a){var e=r[0],o=r[1],u=r[2],i=r[3],c=e+e,s=o+o,f=u+u,h=e*c,l=e*s,M=e*f,v=o*s,m=o*f,d=u*f,b=i*c,_=i*s,x=i*f,p=a[0],g=a[1],E=a[2];return t[0]=(1-(v+d))*p,t[1]=(l+x)*p,t[2]=(M-_)*p,t[3]=0,t[4]=(l-x)*g,t[5]=(1-(h+d))*g,t[6]=(m+b)*g,t[7]=0,t[8]=(M+_)*E,t[9]=(m-b)*E,t[10]=(1-(h+v))*E,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t}function Tr(t,r,n,a,e){var o=r[0],u=r[1],i=r[2],c=r[3],s=o+o,f=u+u,h=i+i,l=o*s,M=o*f,v=o*h,m=u*f,d=u*h,b=i*h,_=c*s,x=c*f,p=c*h,g=a[0],E=a[1],y=a[2],T=e[0],A=e[1],R=e[2],P=(1-(m+b))*g,q=(M+p)*g,w=(v-x)*g,F=(M-p)*E,S=(1-(l+b))*E,D=(d+_)*E,B=(v+x)*y,U=(d-_)*y,I=(1-(l+m))*y;return t[0]=P,t[1]=q,t[2]=w,t[3]=0,t[4]=F,t[5]=S,t[6]=D,t[7]=0,t[8]=B,t[9]=U,t[10]=I,t[11]=0,t[12]=n[0]+T-(P*T+F*A+B*R),t[13]=n[1]+A-(q*T+S*A+U*R),t[14]=n[2]+R-(w*T+D*A+I*R),t[15]=1,t}function Ar(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=n+n,i=a+a,c=e+e,s=n*u,f=a*u,h=a*i,l=e*u,M=e*i,v=e*c,m=o*u,d=o*i,b=o*c;return t[0]=1-h-v,t[1]=f+b,t[2]=l-d,t[3]=0,t[4]=f-b,t[5]=1-s-v,t[6]=M+m,t[7]=0,t[8]=l+d,t[9]=M-m,t[10]=1-s-h,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function Rr(t,r,n,a,e,o,u){var i=1/(n-r),c=1/(e-a),s=1/(o-u);return t[0]=2*o*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*o*c,t[6]=0,t[7]=0,t[8]=(n+r)*i,t[9]=(e+a)*c,t[10]=(u+o)*s,t[11]=-1,t[12]=0,t[13]=0,t[14]=u*o*2*s,t[15]=0,t}function Pr(t,r,n,a,e){var o,u=1/Math.tan(r/2);return t[0]=u/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=e&&e!==1/0?(o=1/(a-e),t[10]=(e+a)*o,t[14]=2*e*a*o):(t[10]=-1,t[14]=-2*a),t}var qr=Pr;function wr(t,r,n,a,e){var o,u=1/Math.tan(r/2);return t[0]=u/n,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=e&&e!==1/0?(o=1/(a-e),t[10]=e*o,t[14]=e*a*o):(t[10]=-1,t[14]=-a),t}function Fr(t,r,n,a){var e=Math.tan(r.upDegrees*Math.PI/180),o=Math.tan(r.downDegrees*Math.PI/180),u=Math.tan(r.leftDegrees*Math.PI/180),i=Math.tan(r.rightDegrees*Math.PI/180),c=2/(u+i),s=2/(e+o);return t[0]=c,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=-(u-i)*c*.5,t[9]=(e-o)*s*.5,t[10]=a/(n-a),t[11]=-1,t[12]=0,t[13]=0,t[14]=a*n/(n-a),t[15]=0,t}function Sr(t,r,n,a,e,o,u){var i=1/(r-n),c=1/(a-e),s=1/(o-u);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*s,t[11]=0,t[12]=(r+n)*i,t[13]=(e+a)*c,t[14]=(u+o)*s,t[15]=1,t}var Dr=Sr;function Br(t,r,n,a,e,o,u){var i=1/(r-n),c=1/(a-e),s=1/(o-u);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=s,t[11]=0,t[12]=(r+n)*i,t[13]=(e+a)*c,t[14]=o*s,t[15]=1,t}function Ur(t,r,n,a){var e,o,u,i,c,s,f,h,l,v,m=r[0],d=r[1],b=r[2],_=a[0],x=a[1],p=a[2],g=n[0],E=n[1],y=n[2];return Math.abs(m-g)<M&&Math.abs(d-E)<M&&Math.abs(b-y)<M?tr(t):(f=m-g,h=d-E,l=b-y,e=x*(l*=v=1/Math.hypot(f,h,l))-p*(h*=v),o=p*(f*=v)-_*l,u=_*h-x*f,(v=Math.hypot(e,o,u))?(e*=v=1/v,o*=v,u*=v):(e=0,o=0,u=0),i=h*u-l*o,c=l*e-f*u,s=f*o-h*e,(v=Math.hypot(i,c,s))?(i*=v=1/v,c*=v,s*=v):(i=0,c=0,s=0),t[0]=e,t[1]=i,t[2]=f,t[3]=0,t[4]=o,t[5]=c,t[6]=h,t[7]=0,t[8]=u,t[9]=s,t[10]=l,t[11]=0,t[12]=-(e*m+o*d+u*b),t[13]=-(i*m+c*d+s*b),t[14]=-(f*m+h*d+l*b),t[15]=1,t)}function Ir(t,r,n,a){var e=r[0],o=r[1],u=r[2],i=a[0],c=a[1],s=a[2],f=e-n[0],h=o-n[1],l=u-n[2],M=f*f+h*h+l*l;M>0&&(f*=M=1/Math.sqrt(M),h*=M,l*=M);var v=c*l-s*h,m=s*f-i*l,d=i*h-c*f;return(M=v*v+m*m+d*d)>0&&(v*=M=1/Math.sqrt(M),m*=M,d*=M),t[0]=v,t[1]=m,t[2]=d,t[3]=0,t[4]=h*d-l*m,t[5]=l*v-f*d,t[6]=f*m-h*v,t[7]=0,t[8]=f,t[9]=h,t[10]=l,t[11]=0,t[12]=e,t[13]=o,t[14]=u,t[15]=1,t}function Lr(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"}function Or(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])}function Xr(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t[4]=r[4]+n[4],t[5]=r[5]+n[5],t[6]=r[6]+n[6],t[7]=r[7]+n[7],t[8]=r[8]+n[8],t[9]=r[9]+n[9],t[10]=r[10]+n[10],t[11]=r[11]+n[11],t[12]=r[12]+n[12],t[13]=r[13]+n[13],t[14]=r[14]+n[14],t[15]=r[15]+n[15],t}function Vr(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t[3]=r[3]-n[3],t[4]=r[4]-n[4],t[5]=r[5]-n[5],t[6]=r[6]-n[6],t[7]=r[7]-n[7],t[8]=r[8]-n[8],t[9]=r[9]-n[9],t[10]=r[10]-n[10],t[11]=r[11]-n[11],t[12]=r[12]-n[12],t[13]=r[13]-n[13],t[14]=r[14]-n[14],t[15]=r[15]-n[15],t}function jr(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t[4]=r[4]*n,t[5]=r[5]*n,t[6]=r[6]*n,t[7]=r[7]*n,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,t[11]=r[11]*n,t[12]=r[12]*n,t[13]=r[13]*n,t[14]=r[14]*n,t[15]=r[15]*n,t}function Nr(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t[3]=r[3]+n[3]*a,t[4]=r[4]+n[4]*a,t[5]=r[5]+n[5]*a,t[6]=r[6]+n[6]*a,t[7]=r[7]+n[7]*a,t[8]=r[8]+n[8]*a,t[9]=r[9]+n[9]*a,t[10]=r[10]+n[10]*a,t[11]=r[11]+n[11]*a,t[12]=r[12]+n[12]*a,t[13]=r[13]+n[13]*a,t[14]=r[14]+n[14]*a,t[15]=r[15]+n[15]*a,t}function Yr(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]&&t[4]===r[4]&&t[5]===r[5]&&t[6]===r[6]&&t[7]===r[7]&&t[8]===r[8]&&t[9]===r[9]&&t[10]===r[10]&&t[11]===r[11]&&t[12]===r[12]&&t[13]===r[13]&&t[14]===r[14]&&t[15]===r[15]}function Cr(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=t[4],i=t[5],c=t[6],s=t[7],f=t[8],h=t[9],l=t[10],v=t[11],m=t[12],d=t[13],b=t[14],_=t[15],x=r[0],p=r[1],g=r[2],E=r[3],y=r[4],T=r[5],A=r[6],R=r[7],P=r[8],q=r[9],w=r[10],F=r[11],S=r[12],D=r[13],B=r[14],U=r[15];return Math.abs(n-x)<=M*Math.max(1,Math.abs(n),Math.abs(x))&&Math.abs(a-p)<=M*Math.max(1,Math.abs(a),Math.abs(p))&&Math.abs(e-g)<=M*Math.max(1,Math.abs(e),Math.abs(g))&&Math.abs(o-E)<=M*Math.max(1,Math.abs(o),Math.abs(E))&&Math.abs(u-y)<=M*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(i-T)<=M*Math.max(1,Math.abs(i),Math.abs(T))&&Math.abs(c-A)<=M*Math.max(1,Math.abs(c),Math.abs(A))&&Math.abs(s-R)<=M*Math.max(1,Math.abs(s),Math.abs(R))&&Math.abs(f-P)<=M*Math.max(1,Math.abs(f),Math.abs(P))&&Math.abs(h-q)<=M*Math.max(1,Math.abs(h),Math.abs(q))&&Math.abs(l-w)<=M*Math.max(1,Math.abs(l),Math.abs(w))&&Math.abs(v-F)<=M*Math.max(1,Math.abs(v),Math.abs(F))&&Math.abs(m-S)<=M*Math.max(1,Math.abs(m),Math.abs(S))&&Math.abs(d-D)<=M*Math.max(1,Math.abs(d),Math.abs(D))&&Math.abs(b-B)<=M*Math.max(1,Math.abs(b),Math.abs(B))&&Math.abs(_-U)<=M*Math.max(1,Math.abs(_),Math.abs(U))}var Gr=or,zr=Vr;function Wr(){var t=new v(3);return v!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function Hr(t){var r=new v(3);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r}function Qr(t){var r=t[0],n=t[1],a=t[2];return Math.hypot(r,n,a)}function Zr(t,r,n){var a=new v(3);return a[0]=t,a[1]=r,a[2]=n,a}function kr(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t}function $r(t,r,n,a){return t[0]=r,t[1]=n,t[2]=a,t}function Kr(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t}function Jr(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t}function tn(t,r,n){return t[0]=r[0]*n[0],t[1]=r[1]*n[1],t[2]=r[2]*n[2],t}function rn(t,r,n){return t[0]=r[0]/n[0],t[1]=r[1]/n[1],t[2]=r[2]/n[2],t}function nn(t,r){return t[0]=Math.ceil(r[0]),t[1]=Math.ceil(r[1]),t[2]=Math.ceil(r[2]),t}function an(t,r){return t[0]=Math.floor(r[0]),t[1]=Math.floor(r[1]),t[2]=Math.floor(r[2]),t}function en(t,r,n){return t[0]=Math.min(r[0],n[0]),t[1]=Math.min(r[1],n[1]),t[2]=Math.min(r[2],n[2]),t}function on(t,r,n){return t[0]=Math.max(r[0],n[0]),t[1]=Math.max(r[1],n[1]),t[2]=Math.max(r[2],n[2]),t}function un(t,r){return t[0]=Math.round(r[0]),t[1]=Math.round(r[1]),t[2]=Math.round(r[2]),t}function cn(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t}function sn(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t}function fn(t,r){var n=r[0]-t[0],a=r[1]-t[1],e=r[2]-t[2];return Math.hypot(n,a,e)}function hn(t,r){var n=r[0]-t[0],a=r[1]-t[1],e=r[2]-t[2];return n*n+a*a+e*e}function ln(t){var r=t[0],n=t[1],a=t[2];return r*r+n*n+a*a}function Mn(t,r){return t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t}function vn(t,r){return t[0]=1/r[0],t[1]=1/r[1],t[2]=1/r[2],t}function mn(t,r){var n=r[0],a=r[1],e=r[2],o=n*n+a*a+e*e;return o>0&&(o=1/Math.sqrt(o)),t[0]=r[0]*o,t[1]=r[1]*o,t[2]=r[2]*o,t}function dn(t,r){return t[0]*r[0]+t[1]*r[1]+t[2]*r[2]}function bn(t,r,n){var a=r[0],e=r[1],o=r[2],u=n[0],i=n[1],c=n[2];return t[0]=e*c-o*i,t[1]=o*u-a*c,t[2]=a*i-e*u,t}function _n(t,r,n,a){var e=r[0],o=r[1],u=r[2];return t[0]=e+a*(n[0]-e),t[1]=o+a*(n[1]-o),t[2]=u+a*(n[2]-u),t}function xn(t,r,n,a,e,o){var u=o*o,i=u*(2*o-3)+1,c=u*(o-2)+o,s=u*(o-1),f=u*(3-2*o);return t[0]=r[0]*i+n[0]*c+a[0]*s+e[0]*f,t[1]=r[1]*i+n[1]*c+a[1]*s+e[1]*f,t[2]=r[2]*i+n[2]*c+a[2]*s+e[2]*f,t}function pn(t,r,n,a,e,o){var u=1-o,i=u*u,c=o*o,s=i*u,f=3*o*i,h=3*c*u,l=c*o;return t[0]=r[0]*s+n[0]*f+a[0]*h+e[0]*l,t[1]=r[1]*s+n[1]*f+a[1]*h+e[1]*l,t[2]=r[2]*s+n[2]*f+a[2]*h+e[2]*l,t}function gn(t,r){r=r||1;var n=2*m()*Math.PI,a=2*m()-1,e=Math.sqrt(1-a*a)*r;return t[0]=Math.cos(n)*e,t[1]=Math.sin(n)*e,t[2]=a*r,t}function En(t,r,n){var a=r[0],e=r[1],o=r[2],u=n[3]*a+n[7]*e+n[11]*o+n[15];return u=u||1,t[0]=(n[0]*a+n[4]*e+n[8]*o+n[12])/u,t[1]=(n[1]*a+n[5]*e+n[9]*o+n[13])/u,t[2]=(n[2]*a+n[6]*e+n[10]*o+n[14])/u,t}function yn(t,r,n){var a=r[0],e=r[1],o=r[2];return t[0]=a*n[0]+e*n[3]+o*n[6],t[1]=a*n[1]+e*n[4]+o*n[7],t[2]=a*n[2]+e*n[5]+o*n[8],t}function Tn(t,r,n){var a=n[0],e=n[1],o=n[2],u=n[3],i=r[0],c=r[1],s=r[2],f=e*s-o*c,h=o*i-a*s,l=a*c-e*i,M=e*l-o*h,v=o*f-a*l,m=a*h-e*f,d=2*u;return f*=d,h*=d,l*=d,M*=2,v*=2,m*=2,t[0]=i+f+M,t[1]=c+h+v,t[2]=s+l+m,t}function An(t,r,n,a){var e=[],o=[];return e[0]=r[0]-n[0],e[1]=r[1]-n[1],e[2]=r[2]-n[2],o[0]=e[0],o[1]=e[1]*Math.cos(a)-e[2]*Math.sin(a),o[2]=e[1]*Math.sin(a)+e[2]*Math.cos(a),t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function Rn(t,r,n,a){var e=[],o=[];return e[0]=r[0]-n[0],e[1]=r[1]-n[1],e[2]=r[2]-n[2],o[0]=e[2]*Math.sin(a)+e[0]*Math.cos(a),o[1]=e[1],o[2]=e[2]*Math.cos(a)-e[0]*Math.sin(a),t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function Pn(t,r,n,a){var e=[],o=[];return e[0]=r[0]-n[0],e[1]=r[1]-n[1],e[2]=r[2]-n[2],o[0]=e[0]*Math.cos(a)-e[1]*Math.sin(a),o[1]=e[0]*Math.sin(a)+e[1]*Math.cos(a),o[2]=e[2],t[0]=o[0]+n[0],t[1]=o[1]+n[1],t[2]=o[2]+n[2],t}function qn(t,r){var n=t[0],a=t[1],e=t[2],o=r[0],u=r[1],i=r[2],c=Math.sqrt(n*n+a*a+e*e)*Math.sqrt(o*o+u*u+i*i),s=c&&dn(t,r)/c;return Math.acos(Math.min(Math.max(s,-1),1))}function wn(t){return t[0]=0,t[1]=0,t[2]=0,t}function Fn(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"}function Sn(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]}function Dn(t,r){var n=t[0],a=t[1],e=t[2],o=r[0],u=r[1],i=r[2];return Math.abs(n-o)<=M*Math.max(1,Math.abs(n),Math.abs(o))&&Math.abs(a-u)<=M*Math.max(1,Math.abs(a),Math.abs(u))&&Math.abs(e-i)<=M*Math.max(1,Math.abs(e),Math.abs(i))}var Bn,Un=Jr,In=tn,Ln=rn,On=fn,Xn=hn,Vn=Qr,jn=ln,Nn=(Bn=Wr(),function(t,r,n,a,e,o){var u,i;for(r||(r=3),n||(n=0),i=a?Math.min(a*r+n,t.length):t.length,u=n;u<i;u+=r)Bn[0]=t[u],Bn[1]=t[u+1],Bn[2]=t[u+2],e(Bn,Bn,o),t[u]=Bn[0],t[u+1]=Bn[1],t[u+2]=Bn[2];return t});function Yn(){var t=new v(4);return v!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function Cn(t){var r=new v(4);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r}function Gn(t,r,n,a){var e=new v(4);return e[0]=t,e[1]=r,e[2]=n,e[3]=a,e}function zn(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t}function Wn(t,r,n,a,e){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t}function Hn(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t}function Qn(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t[2]=r[2]-n[2],t[3]=r[3]-n[3],t}function Zn(t,r,n){return t[0]=r[0]*n[0],t[1]=r[1]*n[1],t[2]=r[2]*n[2],t[3]=r[3]*n[3],t}function kn(t,r,n){return t[0]=r[0]/n[0],t[1]=r[1]/n[1],t[2]=r[2]/n[2],t[3]=r[3]/n[3],t}function $n(t,r){return t[0]=Math.ceil(r[0]),t[1]=Math.ceil(r[1]),t[2]=Math.ceil(r[2]),t[3]=Math.ceil(r[3]),t}function Kn(t,r){return t[0]=Math.floor(r[0]),t[1]=Math.floor(r[1]),t[2]=Math.floor(r[2]),t[3]=Math.floor(r[3]),t}function Jn(t,r,n){return t[0]=Math.min(r[0],n[0]),t[1]=Math.min(r[1],n[1]),t[2]=Math.min(r[2],n[2]),t[3]=Math.min(r[3],n[3]),t}function ta(t,r,n){return t[0]=Math.max(r[0],n[0]),t[1]=Math.max(r[1],n[1]),t[2]=Math.max(r[2],n[2]),t[3]=Math.max(r[3],n[3]),t}function ra(t,r){return t[0]=Math.round(r[0]),t[1]=Math.round(r[1]),t[2]=Math.round(r[2]),t[3]=Math.round(r[3]),t}function na(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t}function aa(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t[2]=r[2]+n[2]*a,t[3]=r[3]+n[3]*a,t}function ea(t,r){var n=r[0]-t[0],a=r[1]-t[1],e=r[2]-t[2],o=r[3]-t[3];return Math.hypot(n,a,e,o)}function oa(t,r){var n=r[0]-t[0],a=r[1]-t[1],e=r[2]-t[2],o=r[3]-t[3];return n*n+a*a+e*e+o*o}function ua(t){var r=t[0],n=t[1],a=t[2],e=t[3];return Math.hypot(r,n,a,e)}function ia(t){var r=t[0],n=t[1],a=t[2],e=t[3];return r*r+n*n+a*a+e*e}function ca(t,r){return t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t[3]=-r[3],t}function sa(t,r){return t[0]=1/r[0],t[1]=1/r[1],t[2]=1/r[2],t[3]=1/r[3],t}function fa(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=n*n+a*a+e*e+o*o;return u>0&&(u=1/Math.sqrt(u)),t[0]=n*u,t[1]=a*u,t[2]=e*u,t[3]=o*u,t}function ha(t,r){return t[0]*r[0]+t[1]*r[1]+t[2]*r[2]+t[3]*r[3]}function la(t,r,n,a){var e=n[0]*a[1]-n[1]*a[0],o=n[0]*a[2]-n[2]*a[0],u=n[0]*a[3]-n[3]*a[0],i=n[1]*a[2]-n[2]*a[1],c=n[1]*a[3]-n[3]*a[1],s=n[2]*a[3]-n[3]*a[2],f=r[0],h=r[1],l=r[2],M=r[3];return t[0]=h*s-l*c+M*i,t[1]=-f*s+l*u-M*o,t[2]=f*c-h*u+M*e,t[3]=-f*i+h*o-l*e,t}function Ma(t,r,n,a){var e=r[0],o=r[1],u=r[2],i=r[3];return t[0]=e+a*(n[0]-e),t[1]=o+a*(n[1]-o),t[2]=u+a*(n[2]-u),t[3]=i+a*(n[3]-i),t}function va(t,r){var n,a,e,o,u,i;r=r||1;do{u=(n=2*m()-1)*n+(a=2*m()-1)*a}while(u>=1);do{i=(e=2*m()-1)*e+(o=2*m()-1)*o}while(i>=1);var c=Math.sqrt((1-u)/i);return t[0]=r*n,t[1]=r*a,t[2]=r*e*c,t[3]=r*o*c,t}function ma(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3];return t[0]=n[0]*a+n[4]*e+n[8]*o+n[12]*u,t[1]=n[1]*a+n[5]*e+n[9]*o+n[13]*u,t[2]=n[2]*a+n[6]*e+n[10]*o+n[14]*u,t[3]=n[3]*a+n[7]*e+n[11]*o+n[15]*u,t}function da(t,r,n){var a=r[0],e=r[1],o=r[2],u=n[0],i=n[1],c=n[2],s=n[3],f=s*a+i*o-c*e,h=s*e+c*a-u*o,l=s*o+u*e-i*a,M=-u*a-i*e-c*o;return t[0]=f*s+M*-u+h*-c-l*-i,t[1]=h*s+M*-i+l*-u-f*-c,t[2]=l*s+M*-c+f*-i-h*-u,t[3]=r[3],t}function ba(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t}function _a(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}function xa(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]}function pa(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=r[0],i=r[1],c=r[2],s=r[3];return Math.abs(n-u)<=M*Math.max(1,Math.abs(n),Math.abs(u))&&Math.abs(a-i)<=M*Math.max(1,Math.abs(a),Math.abs(i))&&Math.abs(e-c)<=M*Math.max(1,Math.abs(e),Math.abs(c))&&Math.abs(o-s)<=M*Math.max(1,Math.abs(o),Math.abs(s))}var ga=Qn,Ea=Zn,ya=kn,Ta=ea,Aa=oa,Ra=ua,Pa=ia,qa=function(){var t=Yn();return function(r,n,a,e,o,u){var i,c;for(n||(n=4),a||(a=0),c=e?Math.min(e*n+a,r.length):r.length,i=a;i<c;i+=n)t[0]=r[i],t[1]=r[i+1],t[2]=r[i+2],t[3]=r[i+3],o(t,t,u),r[i]=t[0],r[i+1]=t[1],r[i+2]=t[2],r[i+3]=t[3];return r}}();function wa(){var t=new v(4);return v!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function Fa(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t}function Sa(t,r,n){n*=.5;var a=Math.sin(n);return t[0]=a*r[0],t[1]=a*r[1],t[2]=a*r[2],t[3]=Math.cos(n),t}function Da(t,r){var n=2*Math.acos(r[3]),a=Math.sin(n/2);return a>M?(t[0]=r[0]/a,t[1]=r[1]/a,t[2]=r[2]/a):(t[0]=1,t[1]=0,t[2]=0),n}function Ba(t,r){var n=ce(t,r);return Math.acos(2*n*n-1)}function Ua(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=n[0],c=n[1],s=n[2],f=n[3];return t[0]=a*f+u*i+e*s-o*c,t[1]=e*f+u*c+o*i-a*s,t[2]=o*f+u*s+a*c-e*i,t[3]=u*f-a*i-e*c-o*s,t}function Ia(t,r,n){n*=.5;var a=r[0],e=r[1],o=r[2],u=r[3],i=Math.sin(n),c=Math.cos(n);return t[0]=a*c+u*i,t[1]=e*c+o*i,t[2]=o*c-e*i,t[3]=u*c-a*i,t}function La(t,r,n){n*=.5;var a=r[0],e=r[1],o=r[2],u=r[3],i=Math.sin(n),c=Math.cos(n);return t[0]=a*c-o*i,t[1]=e*c+u*i,t[2]=o*c+a*i,t[3]=u*c-e*i,t}function Oa(t,r,n){n*=.5;var a=r[0],e=r[1],o=r[2],u=r[3],i=Math.sin(n),c=Math.cos(n);return t[0]=a*c+e*i,t[1]=e*c-a*i,t[2]=o*c+u*i,t[3]=u*c-o*i,t}function Xa(t,r){var n=r[0],a=r[1],e=r[2];return t[0]=n,t[1]=a,t[2]=e,t[3]=Math.sqrt(Math.abs(1-n*n-a*a-e*e)),t}function Va(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=Math.sqrt(n*n+a*a+e*e),i=Math.exp(o),c=u>0?i*Math.sin(u)/u:0;return t[0]=n*c,t[1]=a*c,t[2]=e*c,t[3]=i*Math.cos(u),t}function ja(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=Math.sqrt(n*n+a*a+e*e),i=u>0?Math.atan2(u,o)/u:0;return t[0]=n*i,t[1]=a*i,t[2]=e*i,t[3]=.5*Math.log(n*n+a*a+e*e+o*o),t}function Na(t,r,n){return ja(t,r),ie(t,t,n),Va(t,t),t}function Ya(t,r,n,a){var e,o,u,i,c,s=r[0],f=r[1],h=r[2],l=r[3],v=n[0],m=n[1],d=n[2],b=n[3];return(o=s*v+f*m+h*d+l*b)<0&&(o=-o,v=-v,m=-m,d=-d,b=-b),1-o>M?(e=Math.acos(o),u=Math.sin(e),i=Math.sin((1-a)*e)/u,c=Math.sin(a*e)/u):(i=1-a,c=a),t[0]=i*s+c*v,t[1]=i*f+c*m,t[2]=i*h+c*d,t[3]=i*l+c*b,t}function Ca(t){var r=m(),n=m(),a=m(),e=Math.sqrt(1-r),o=Math.sqrt(r);return t[0]=e*Math.sin(2*Math.PI*n),t[1]=e*Math.cos(2*Math.PI*n),t[2]=o*Math.sin(2*Math.PI*a),t[3]=o*Math.cos(2*Math.PI*a),t}function Ga(t,r){var n=r[0],a=r[1],e=r[2],o=r[3],u=n*n+a*a+e*e+o*o,i=u?1/u:0;return t[0]=-n*i,t[1]=-a*i,t[2]=-e*i,t[3]=o*i,t}function za(t,r){return t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t[3]=r[3],t}function Wa(t,r){var n,a=r[0]+r[4]+r[8];if(a>0)n=Math.sqrt(a+1),t[3]=.5*n,n=.5/n,t[0]=(r[5]-r[7])*n,t[1]=(r[6]-r[2])*n,t[2]=(r[1]-r[3])*n;else{var e=0;r[4]>r[0]&&(e=1),r[8]>r[3*e+e]&&(e=2);var o=(e+1)%3,u=(e+2)%3;n=Math.sqrt(r[3*e+e]-r[3*o+o]-r[3*u+u]+1),t[e]=.5*n,n=.5/n,t[3]=(r[3*o+u]-r[3*u+o])*n,t[o]=(r[3*o+e]+r[3*e+o])*n,t[u]=(r[3*u+e]+r[3*e+u])*n}return t}function Ha(t,r,n,a){var e=.5*Math.PI/180;r*=e,n*=e,a*=e;var o=Math.sin(r),u=Math.cos(r),i=Math.sin(n),c=Math.cos(n),s=Math.sin(a),f=Math.cos(a);return t[0]=o*c*f-u*i*s,t[1]=u*i*f+o*c*s,t[2]=u*c*s-o*i*f,t[3]=u*c*f+o*i*s,t}function Qa(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}var Za,ka,$a,Ka,Ja,te,re=Cn,ne=Gn,ae=zn,ee=Wn,oe=Hn,ue=Ua,ie=na,ce=ha,se=Ma,fe=ua,he=fe,le=ia,Me=le,ve=fa,me=xa,de=pa,be=(Za=Wr(),ka=Zr(1,0,0),$a=Zr(0,1,0),function(t,r,n){var a=dn(r,n);return a<-.999999?(bn(Za,ka,r),Vn(Za)<1e-6&&bn(Za,$a,r),mn(Za,Za),Sa(t,Za,Math.PI),t):a>.999999?(t[0]=0,t[1]=0,t[2]=0,t[3]=1,t):(bn(Za,r,n),t[0]=Za[0],t[1]=Za[1],t[2]=Za[2],t[3]=1+a,ve(t,t))}),_e=(Ka=wa(),Ja=wa(),function(t,r,n,a,e,o){return Ya(Ka,r,e,o),Ya(Ja,n,a,o),Ya(t,Ka,Ja,2*o*(1-o)),t}),xe=(te=bt(),function(t,r,n,a){return te[0]=n[0],te[3]=n[1],te[6]=n[2],te[1]=a[0],te[4]=a[1],te[7]=a[2],te[2]=-r[0],te[5]=-r[1],te[8]=-r[2],ve(t,Wa(t,te))});function pe(){var t=new v(8);return v!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0),t[3]=1,t}function ge(t){var r=new v(8);return r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r}function Ee(t,r,n,a,e,o,u,i){var c=new v(8);return c[0]=t,c[1]=r,c[2]=n,c[3]=a,c[4]=e,c[5]=o,c[6]=u,c[7]=i,c}function ye(t,r,n,a,e,o,u){var i=new v(8);i[0]=t,i[1]=r,i[2]=n,i[3]=a;var c=.5*e,s=.5*o,f=.5*u;return i[4]=c*a+s*n-f*r,i[5]=s*a+f*t-c*n,i[6]=f*a+c*r-s*t,i[7]=-c*t-s*r-f*n,i}function Te(t,r,n){var a=.5*n[0],e=.5*n[1],o=.5*n[2],u=r[0],i=r[1],c=r[2],s=r[3];return t[0]=u,t[1]=i,t[2]=c,t[3]=s,t[4]=a*s+e*c-o*i,t[5]=e*s+o*u-a*c,t[6]=o*s+a*i-e*u,t[7]=-a*u-e*i-o*c,t}function Ae(t,r){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*r[0],t[5]=.5*r[1],t[6]=.5*r[2],t[7]=0,t}function Re(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t}function Pe(t,r){var n=wa();Er(n,r);var a=new v(3);return pr(a,r),Te(t,n,a),t}function qe(t,r){return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t}function we(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t}function Fe(t,r,n,a,e,o,u,i,c){return t[0]=r,t[1]=n,t[2]=a,t[3]=e,t[4]=o,t[5]=u,t[6]=i,t[7]=c,t}var Se=ae;function De(t,r){return t[0]=r[4],t[1]=r[5],t[2]=r[6],t[3]=r[7],t}var Be=ae;function Ue(t,r){return t[4]=r[0],t[5]=r[1],t[6]=r[2],t[7]=r[3],t}function Ie(t,r){var n=r[4],a=r[5],e=r[6],o=r[7],u=-r[0],i=-r[1],c=-r[2],s=r[3];return t[0]=2*(n*s+o*u+a*c-e*i),t[1]=2*(a*s+o*i+e*u-n*c),t[2]=2*(e*s+o*c+n*i-a*u),t}function Le(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=.5*n[0],c=.5*n[1],s=.5*n[2],f=r[4],h=r[5],l=r[6],M=r[7];return t[0]=a,t[1]=e,t[2]=o,t[3]=u,t[4]=u*i+e*s-o*c+f,t[5]=u*c+o*i-a*s+h,t[6]=u*s+a*c-e*i+l,t[7]=-a*i-e*c-o*s+M,t}function Oe(t,r,n){var a=-r[0],e=-r[1],o=-r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=i*u+f*a+c*o-s*e,l=c*u+f*e+s*a-i*o,M=s*u+f*o+i*e-c*a,v=f*u-i*a-c*e-s*o;return Ia(t,r,n),a=t[0],e=t[1],o=t[2],u=t[3],t[4]=h*u+v*a+l*o-M*e,t[5]=l*u+v*e+M*a-h*o,t[6]=M*u+v*o+h*e-l*a,t[7]=v*u-h*a-l*e-M*o,t}function Xe(t,r,n){var a=-r[0],e=-r[1],o=-r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=i*u+f*a+c*o-s*e,l=c*u+f*e+s*a-i*o,M=s*u+f*o+i*e-c*a,v=f*u-i*a-c*e-s*o;return La(t,r,n),a=t[0],e=t[1],o=t[2],u=t[3],t[4]=h*u+v*a+l*o-M*e,t[5]=l*u+v*e+M*a-h*o,t[6]=M*u+v*o+h*e-l*a,t[7]=v*u-h*a-l*e-M*o,t}function Ve(t,r,n){var a=-r[0],e=-r[1],o=-r[2],u=r[3],i=r[4],c=r[5],s=r[6],f=r[7],h=i*u+f*a+c*o-s*e,l=c*u+f*e+s*a-i*o,M=s*u+f*o+i*e-c*a,v=f*u-i*a-c*e-s*o;return Oa(t,r,n),a=t[0],e=t[1],o=t[2],u=t[3],t[4]=h*u+v*a+l*o-M*e,t[5]=l*u+v*e+M*a-h*o,t[6]=M*u+v*o+h*e-l*a,t[7]=v*u-h*a-l*e-M*o,t}function je(t,r,n){var a=n[0],e=n[1],o=n[2],u=n[3],i=r[0],c=r[1],s=r[2],f=r[3];return t[0]=i*u+f*a+c*o-s*e,t[1]=c*u+f*e+s*a-i*o,t[2]=s*u+f*o+i*e-c*a,t[3]=f*u-i*a-c*e-s*o,i=r[4],c=r[5],s=r[6],f=r[7],t[4]=i*u+f*a+c*o-s*e,t[5]=c*u+f*e+s*a-i*o,t[6]=s*u+f*o+i*e-c*a,t[7]=f*u-i*a-c*e-s*o,t}function Ne(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=n[0],c=n[1],s=n[2],f=n[3];return t[0]=a*f+u*i+e*s-o*c,t[1]=e*f+u*c+o*i-a*s,t[2]=o*f+u*s+a*c-e*i,t[3]=u*f-a*i-e*c-o*s,i=n[4],c=n[5],s=n[6],f=n[7],t[4]=a*f+u*i+e*s-o*c,t[5]=e*f+u*c+o*i-a*s,t[6]=o*f+u*s+a*c-e*i,t[7]=u*f-a*i-e*c-o*s,t}function Ye(t,r,n,a){if(Math.abs(a)<M)return qe(t,r);var e=Math.hypot(n[0],n[1],n[2]);a*=.5;var o=Math.sin(a),u=o*n[0]/e,i=o*n[1]/e,c=o*n[2]/e,s=Math.cos(a),f=r[0],h=r[1],l=r[2],v=r[3];t[0]=f*s+v*u+h*c-l*i,t[1]=h*s+v*i+l*u-f*c,t[2]=l*s+v*c+f*i-h*u,t[3]=v*s-f*u-h*i-l*c;var m=r[4],d=r[5],b=r[6],_=r[7];return t[4]=m*s+_*u+d*c-b*i,t[5]=d*s+_*i+b*u-m*c,t[6]=b*s+_*c+m*i-d*u,t[7]=_*s-m*u-d*i-b*c,t}function Ce(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t[2]=r[2]+n[2],t[3]=r[3]+n[3],t[4]=r[4]+n[4],t[5]=r[5]+n[5],t[6]=r[6]+n[6],t[7]=r[7]+n[7],t}function Ge(t,r,n){var a=r[0],e=r[1],o=r[2],u=r[3],i=n[4],c=n[5],s=n[6],f=n[7],h=r[4],l=r[5],M=r[6],v=r[7],m=n[0],d=n[1],b=n[2],_=n[3];return t[0]=a*_+u*m+e*b-o*d,t[1]=e*_+u*d+o*m-a*b,t[2]=o*_+u*b+a*d-e*m,t[3]=u*_-a*m-e*d-o*b,t[4]=a*f+u*i+e*s-o*c+h*_+v*m+l*b-M*d,t[5]=e*f+u*c+o*i-a*s+l*_+v*d+M*m-h*b,t[6]=o*f+u*s+a*c-e*i+M*_+v*b+h*d-l*m,t[7]=u*f-a*i-e*c-o*s+v*_-h*m-l*d-M*b,t}var ze=Ge;function We(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=r[3]*n,t[4]=r[4]*n,t[5]=r[5]*n,t[6]=r[6]*n,t[7]=r[7]*n,t}var He=ce;function Qe(t,r,n,a){var e=1-a;return He(r,n)<0&&(a=-a),t[0]=r[0]*e+n[0]*a,t[1]=r[1]*e+n[1]*a,t[2]=r[2]*e+n[2]*a,t[3]=r[3]*e+n[3]*a,t[4]=r[4]*e+n[4]*a,t[5]=r[5]*e+n[5]*a,t[6]=r[6]*e+n[6]*a,t[7]=r[7]*e+n[7]*a,t}function Ze(t,r){var n=Je(r);return t[0]=-r[0]/n,t[1]=-r[1]/n,t[2]=-r[2]/n,t[3]=r[3]/n,t[4]=-r[4]/n,t[5]=-r[5]/n,t[6]=-r[6]/n,t[7]=r[7]/n,t}function ke(t,r){return t[0]=-r[0],t[1]=-r[1],t[2]=-r[2],t[3]=r[3],t[4]=-r[4],t[5]=-r[5],t[6]=-r[6],t[7]=r[7],t}var $e=fe,Ke=$e,Je=le,to=Je;function ro(t,r){var n=Je(r);if(n>0){n=Math.sqrt(n);var a=r[0]/n,e=r[1]/n,o=r[2]/n,u=r[3]/n,i=r[4],c=r[5],s=r[6],f=r[7],h=a*i+e*c+o*s+u*f;t[0]=a,t[1]=e,t[2]=o,t[3]=u,t[4]=(i-a*h)/n,t[5]=(c-e*h)/n,t[6]=(s-o*h)/n,t[7]=(f-u*h)/n}return t}function no(t){return"quat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+")"}function ao(t,r){return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]&&t[3]===r[3]&&t[4]===r[4]&&t[5]===r[5]&&t[6]===r[6]&&t[7]===r[7]}function eo(t,r){var n=t[0],a=t[1],e=t[2],o=t[3],u=t[4],i=t[5],c=t[6],s=t[7],f=r[0],h=r[1],l=r[2],v=r[3],m=r[4],d=r[5],b=r[6],_=r[7];return Math.abs(n-f)<=M*Math.max(1,Math.abs(n),Math.abs(f))&&Math.abs(a-h)<=M*Math.max(1,Math.abs(a),Math.abs(h))&&Math.abs(e-l)<=M*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(o-v)<=M*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(u-m)<=M*Math.max(1,Math.abs(u),Math.abs(m))&&Math.abs(i-d)<=M*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(c-b)<=M*Math.max(1,Math.abs(c),Math.abs(b))&&Math.abs(s-_)<=M*Math.max(1,Math.abs(s),Math.abs(_))}function oo(){var t=new v(2);return v!=Float32Array&&(t[0]=0,t[1]=0),t}function uo(t){var r=new v(2);return r[0]=t[0],r[1]=t[1],r}function io(t,r){var n=new v(2);return n[0]=t,n[1]=r,n}function co(t,r){return t[0]=r[0],t[1]=r[1],t}function so(t,r,n){return t[0]=r,t[1]=n,t}function fo(t,r,n){return t[0]=r[0]+n[0],t[1]=r[1]+n[1],t}function ho(t,r,n){return t[0]=r[0]-n[0],t[1]=r[1]-n[1],t}function lo(t,r,n){return t[0]=r[0]*n[0],t[1]=r[1]*n[1],t}function Mo(t,r,n){return t[0]=r[0]/n[0],t[1]=r[1]/n[1],t}function vo(t,r){return t[0]=Math.ceil(r[0]),t[1]=Math.ceil(r[1]),t}function mo(t,r){return t[0]=Math.floor(r[0]),t[1]=Math.floor(r[1]),t}function bo(t,r,n){return t[0]=Math.min(r[0],n[0]),t[1]=Math.min(r[1],n[1]),t}function _o(t,r,n){return t[0]=Math.max(r[0],n[0]),t[1]=Math.max(r[1],n[1]),t}function xo(t,r){return t[0]=Math.round(r[0]),t[1]=Math.round(r[1]),t}function po(t,r,n){return t[0]=r[0]*n,t[1]=r[1]*n,t}function go(t,r,n,a){return t[0]=r[0]+n[0]*a,t[1]=r[1]+n[1]*a,t}function Eo(t,r){var n=r[0]-t[0],a=r[1]-t[1];return Math.hypot(n,a)}function yo(t,r){var n=r[0]-t[0],a=r[1]-t[1];return n*n+a*a}function To(t){var r=t[0],n=t[1];return Math.hypot(r,n)}function Ao(t){var r=t[0],n=t[1];return r*r+n*n}function Ro(t,r){return t[0]=-r[0],t[1]=-r[1],t}function Po(t,r){return t[0]=1/r[0],t[1]=1/r[1],t}function qo(t,r){var n=r[0],a=r[1],e=n*n+a*a;return e>0&&(e=1/Math.sqrt(e)),t[0]=r[0]*e,t[1]=r[1]*e,t}function wo(t,r){return t[0]*r[0]+t[1]*r[1]}function Fo(t,r,n){var a=r[0]*n[1]-r[1]*n[0];return t[0]=t[1]=0,t[2]=a,t}function So(t,r,n,a){var e=r[0],o=r[1];return t[0]=e+a*(n[0]-e),t[1]=o+a*(n[1]-o),t}function Do(t,r){r=r||1;var n=2*m()*Math.PI;return t[0]=Math.cos(n)*r,t[1]=Math.sin(n)*r,t}function Bo(t,r,n){var a=r[0],e=r[1];return t[0]=n[0]*a+n[2]*e,t[1]=n[1]*a+n[3]*e,t}function Uo(t,r,n){var a=r[0],e=r[1];return t[0]=n[0]*a+n[2]*e+n[4],t[1]=n[1]*a+n[3]*e+n[5],t}function Io(t,r,n){var a=r[0],e=r[1];return t[0]=n[0]*a+n[3]*e+n[6],t[1]=n[1]*a+n[4]*e+n[7],t}function Lo(t,r,n){var a=r[0],e=r[1];return t[0]=n[0]*a+n[4]*e+n[12],t[1]=n[1]*a+n[5]*e+n[13],t}function Oo(t,r,n,a){var e=r[0]-n[0],o=r[1]-n[1],u=Math.sin(a),i=Math.cos(a);return t[0]=e*i-o*u+n[0],t[1]=e*u+o*i+n[1],t}function Xo(t,r){var n=t[0],a=t[1],e=r[0],o=r[1],u=Math.sqrt(n*n+a*a)*Math.sqrt(e*e+o*o),i=u&&(n*e+a*o)/u;return Math.acos(Math.min(Math.max(i,-1),1))}function Vo(t){return t[0]=0,t[1]=0,t}function jo(t){return"vec2("+t[0]+", "+t[1]+")"}function No(t,r){return t[0]===r[0]&&t[1]===r[1]}function Yo(t,r){var n=t[0],a=t[1],e=r[0],o=r[1];return Math.abs(n-e)<=M*Math.max(1,Math.abs(n),Math.abs(e))&&Math.abs(a-o)<=M*Math.max(1,Math.abs(a),Math.abs(o))}var Co=To,Go=ho,zo=lo,Wo=Mo,Ho=Eo,Qo=yo,Zo=Ao,ko=function(){var t=oo();return function(r,n,a,e,o,u){var i,c;for(n||(n=2),a||(a=0),c=e?Math.min(e*n+a,r.length):r.length,i=a;i<c;i+=n)t[0]=r[i],t[1]=r[i+1],o(t,t,u),r[i]=t[0],r[i+1]=t[1];return r}}()},183:(t,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.assessBandVolumes=r.initAudio=void 0,r.initAudio=function(t){var r=new(window.AudioContext||window.webkitAudioContext),n=r.createMediaElementSource(t),a=r.createAnalyser();a.fftSize=2048;var e=r.createGain();return e.gain.value=1,n.connect(e),e.connect(r.destination),n.connect(a),{audioCtx:r,analyser:a}},r.assessBandVolumes=function(t){for(var r=t.length,n=Math.ceil(r/170),a=new Array(n),e=0;e<r;e++)a[Math.floor(e/170)]+=t[e];for(var o=0;o<6;o++)a[o]=a[o]/n/256;return a}},424:(t,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.createFrameBuffer=r.createSquareBuffer=void 0,r.createSquareBuffer=function(t){var r=t.createBuffer(),n=t.createBuffer(),a=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,1,1,1,-1,-1,1,-1]),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,1,2,3]),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,1,1]),t.STATIC_DRAW),{enable:function(e,o,u){var i=t.FLOAT,c=!1,s=0,f=0;t.bindBuffer(t.ARRAY_BUFFER,r),t.vertexAttribPointer(e.attributeLocation(o),2,i,c,s,f),t.enableVertexAttribArray(e.attributeLocation(o)),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),i=t.FLOAT,c=!1,s=0,f=0,t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(e.attributeLocation(u),2,i,c,s,f),t.enableVertexAttribArray(e.attributeLocation(u))}}},r.createFrameBuffer=function(t,r,n){var a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a);var e=t.createTexture();return t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n,r,0,t.RGBA,t.UNSIGNED_BYTE,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0),{texture:e,buffer:a,enable:function(){t.bindFramebuffer(t.FRAMEBUFFER,a)}}}},295:(t,r,n)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.moveParticles=r.createEmitter=void 0;var a=n(887);r.createEmitter=function(t){var r=t.angle,n=t.rotation,e=t.length,o=t.position,u=t.inverse_normal,i=a.mat4.create();a.mat4.rotate(i,i,n,[0,0,1]);var c=function(t){return a.vec4.fromValues(0,0,0,0)},s=function(t){return a.vec4.fromValues(0,0,0,0)};if(0==r)c=function(){var t=a.vec4.create();return a.mat4.multiply(t,i,a.vec4.fromValues(0,1,0,0)),a.vec4.scale(t,t,u?-1:1),t},s=function(t){var r=t*e-e/2,n=a.vec4.create();return a.mat4.multiply(n,i,a.vec4.fromValues(r,0,0,0)),a.vec4.add(n,n,o),n};else{var f=e/r;c=function(t){var n=t*r+Math.PI/2-r/2,e=a.vec4.create();return a.mat4.multiply(e,i,a.vec4.fromValues(Math.cos(n),Math.sin(n),0,0)),a.vec4.scale(e,e,u?-1:1),e},s=function(t){var n=t*r+Math.PI/2-r/2,e=a.vec4.create();return a.mat4.multiply(e,i,a.vec4.fromValues(f*Math.cos(n),f*Math.sin(n),0,0)),a.vec4.add(e,e,o),e}}return{createParticles:function(t,r){r||(r={});for(var n=[],e=0;e<t;e++){var o=Math.random(),u=.125*Math.random()*(null!=r.velocity_mod?r.velocity_mod:1),i=a.vec4.create();n.push({location:r.additional_position?a.vec4.add(i,s(o),r.additional_position):s(o),velocity:a.vec4.multiply(c(o),c(o),a.vec4.fromValues(u,u,0,0)),expires:Date.now()+(r.expiration?r.expiration:5e3),rotational_velocity:Math.random()*Math.PI/20,rotation:2*Math.random()*Math.PI,scaling:Math.random()*(.1-.01)+.01})}return n}}},r.moveParticles=function(t){var r=[],n=t.length-5e5;return t.forEach((function(e,o){e.expires<Date.now()||o<n?r.push(o):(t[o].rotation+=t[o].rotational_velocity,a.vec4.add(t[o].location,t[o].location,t[o].velocity),a.vec4.add(t[o].velocity,t[o].velocity,a.vec4.fromValues(0,-.001,0,0)))})),r.reverse().forEach((function(r){t.splice(r,1)})),t}},708:(t,r)=>{function n(t,r,n){var a=t.createShader(r);return t.shaderSource(a,n),t.compileShader(a),t.getShaderParameter(a,t.COMPILE_STATUS)?a:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(a)),t.deleteShader(a),null)}Object.defineProperty(r,"__esModule",{value:!0}),r.createShaderProgram=void 0,r.createShaderProgram=function(t,r,a,e){var o=n(t,t.VERTEX_SHADER,r),u=n(t,t.FRAGMENT_SHADER,a),i=t.createProgram();return t.attachShader(i,o),t.attachShader(i,u),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS)?{shader_variables:{uniforms:{},attributes:{}},program:i,use:function(){},uniform:function(r,n){for(var a,e=[],o=2;o<arguments.length;o++)e[o-2]=arguments[o];this.shader_variables.uniforms[n]?a=this.shader_variables.uniforms[n]:(a=t.getUniformLocation(this.program,n),this.shader_variables.uniforms[n]=a),r(a,e)},attributeLocation:function(r){var n;this.shader_variables.attributes[r]?n=this.shader_variables.attributes[r]:(n=t.getAttribLocation(this.program,r),this.shader_variables.attributes[r]=n)}}:(alert("Unable to initialize the shader "+e+t.getProgramInfoLog(i)),null)}},356:(t,r)=>{function n(t){return 0==(t&t-1)}Object.defineProperty(r,"__esModule",{value:!0}),r.loadTexture=void 0,r.loadTexture=function(t,r){var a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);var e=t.RGBA,o=t.RGBA,u=t.UNSIGNED_BYTE,i=new Uint8Array([200,200,255,255]);t.texImage2D(t.TEXTURE_2D,0,e,1,1,0,o,u,i);var c=new Image;return c.crossOrigin="Anonymous",c.onload=function(){t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,e,o,u,c),n(c.width)&&n(c.height)?t.generateMipmap(t.TEXTURE_2D):(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR))},c.src=r,{set:function(r){t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_2D,a)}}}},347:(t,r,n)=>{n.r(r),n.d(r,{default:()=>a});const a="#version 300 es\nin mediump vec2 in_texture_coord;\n\nuniform sampler2D image;\nuniform bool lr_blur;\n\nuniform vec3 low_bloom_color = vec3(240.0/255.0,113.0/255.0,47.0/255.0 );\nuniform vec3 high_bloom_color = vec3(255.0/255.0,252.0/255.0,160.0/255.0);\n\nout mediump vec4 output_fragment_color;\n\nmediump float blur_weights[5] = float[5](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\n\nlowp float usablePixel(mediump vec3 pixel_rgb){\n  lowp vec3 use_low_rgb = step( -0.1 , pixel_rgb - low_bloom_color);\n  lowp vec3 use_high_rgb = 1.0 - step( 0.1 , pixel_rgb - high_bloom_color);\n  return step( 1.0 ,  use_high_rgb[0] * use_high_rgb[1] * use_high_rgb[2] * use_low_rgb[0] * use_low_rgb[1] * use_low_rgb[2] )  ;\n}\nvoid main(void) {\n  // isolate brighter than orange shade (clamp interval)\n  mediump vec3 base_pixel = texture(image, in_texture_coord).rgb ;\n  lowp vec3 isolated_color = (base_pixel )  *  usablePixel(base_pixel)  ;\n\n  // blur\n  lowp vec2 tex_offset = vec2(1.0/${WIDTH}.0, 1.0/${HEIGHT}.0) ; // gets size of single texel\n  lowp vec3 result = isolated_color * blur_weights[0]; // current fragment's contribution\n  for(int i = 1; i < 5; ++i) {\n  mediump vec3 px = texture(image, in_texture_coord + vec2(tex_offset.x * float(i), 0.0)).rgb;\n  mediump vec3 mx = texture(image, in_texture_coord - vec2(tex_offset.x * float(i), 0.0)).rgb;\n  mediump vec3 py = texture(image, in_texture_coord + vec2(0.0, tex_offset.y * float(i))).rgb;\n  mediump vec3 my = texture(image, in_texture_coord - vec2(0.0, tex_offset.y * float(i))).rgb;\n     result += usablePixel(px) * px * blur_weights[i] * float(lr_blur)\n          + usablePixel(py) * py * blur_weights[i] * float(!lr_blur);\n          result +=  usablePixel(mx) * mx * blur_weights[i] * float(lr_blur)\n          + usablePixel(my) * my * blur_weights[i] * float(!lr_blur);\n    }\n    output_fragment_color = vec4(result , 1.0);\n}"},365:(t,r,n)=>{n.r(r),n.d(r,{default:()=>a});const a="#version 300 es\nin vec4 in_vertex_position;\nin vec2 in_texture_coord;\nout mediump vec2 out_texture_coord;\nvoid main() {\n  gl_Position = in_vertex_position;\n  out_texture_coord = in_texture_coord;\n}"},902:(t,r,n)=>{n.r(r),n.d(r,{default:()=>a});const a="#version 300 es\nin vec4 in_vertex_position;\nin vec2 in_texture_coord;\n\n\nuniform mediump float vertex_scaling;\nuniform vec4 vertex_translation;\nuniform mat4 vertex_rotation;\n\nout mediump vec2 out_texture_coord;\n\nvoid main() {\n  gl_Position = vertex_rotation * in_vertex_position * vec4(vertex_scaling , vertex_scaling , 1.0 , 1.0) + vertex_translation;\n  out_texture_coord = in_texture_coord;\n}"},37:(t,r,n)=>{n.r(r),n.d(r,{default:()=>a});const a="#version 300 es\nin mediump vec2 out_texture_coord;\nuniform sampler2D base_image;\nuniform sampler2D processed_image;\nuniform mediump float bloom_strength;\nout mediump vec4 output_fragment_color;\n\nvoid main(){\n  mediump vec3 bloom = texture(processed_image , out_texture_coord).rgb;\n  // adds the bloom image to the base image and also adds a white color on top\n  output_fragment_color = texture(base_image , out_texture_coord) + vec4(bloom * clamp(bloom_strength , 0.0 , 1.0)  , 1.0)\n    + vec4( vec3(255.0/255.0,252.0/255.0,160.0/255.0) * clamp(bloomStrength * .1 , 0.0 , 1.0)  , 1.0);\n}"},248:(t,r,n)=>{n.r(r),n.d(r,{default:()=>a});const a="#version 300 es\nin mediump vec2 out_texture_coord;\nuniform sampler2D image;\n\nout mediump vec4 output_fragment_color;\nvoid main(){\n  output_fragment_color  = texture(texture_image , out_texture_coord);\n}"}},r={};function n(a){var e=r[a];if(void 0!==e)return e.exports;var o=r[a]={exports:{}};return t[a](o,o.exports,n),o.exports}n.d=(t,r)=>{for(var a in r)n.o(r,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},n.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var a={};return(()=>{var t=a;Object.defineProperty(t,"__esModule",{value:!0}),t.buildCard=t.initAudio=t.assessBandVolumes=t.moveParticles=t.createParticleEmitter=t.loadTexture=t.initFrameBuffer=t.initSquareBuffers=t.createShaderProgram=t.clearScreen=t.setGLInstance=t.helloWorld=t.texture_f_shader=t.particle_v_shader=t.post_bloom_f_shader=t.bloom_f_shader=t.immobile_v_shader=void 0;var r,e=n(365),o=n(902),u=n(347),i=n(37),c=n(248),s=n(708),f=n(424),h=n(356),l=n(295),M=n(183);t.immobile_v_shader=e.default,t.bloom_f_shader=u.default,t.post_bloom_f_shader=i.default,t.particle_v_shader=o.default,t.texture_f_shader=c.default,t.helloWorld=function(){console.log("-_active_-")},t.setGLInstance=function(t){t=t},t.clearScreen=function(){r.clearColor(.75,.75,.75,1),r.clearDepth(1),r.enable(r.DEPTH_TEST),r.depthFunc(r.LEQUAL),r.clear(r.COLOR_BUFFER_BIT|r.DEPTH_BUFFER_BIT)},t.createShaderProgram=function(t,n,a){return s.createShaderProgram(r,t,n,a)},t.initSquareBuffers=function(){return f.createSquareBuffer(r)},t.initFrameBuffer=function(t,n){return f.createFrameBuffer(r,t,n)},t.loadTexture=function(t){return h.loadTexture(r,t)},t.createParticleEmitter=function(t){return l.createEmitter(t)},t.moveParticles=function(t){return l.moveParticles(t)},t.assessBandVolumes=function(t){return M.assessBandVolumes(t)},t.initAudio=function(t){return M.initAudio(t)},t.buildCard=function(t,r,n,a,e,o,u,i){}})(),a})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,